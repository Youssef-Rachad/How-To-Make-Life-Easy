
:root { font: 20px/1.2 , sans-serif; }/*roboto*/

body * {
	margin:          unset;
  /*The box-sizing property defines how
   the width and height (and min/max properties) of an element 
   are calculated: should they include padding and borders.

   1.content-box  Default. Includes only the content
   2.border-box  Includes content, padding and border 
   useful to unset such that you can include #2 */
	box-sizing:      unset;
	padding:         unset;
	font-size:       unset;
	color:           unset;
	text-decoration: unset;
}

body{
}
/*this is a workaround to make the
background less opaque*/
.bigboi{z-index: 1;}
.bigboi:before{
  background-attachment: fixed;
  background-position: 0% -10.0%;
  content: "";
  position: fixed;
  z-index: -1;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background:url("blogbg.jpg");
  opacity: 0.4;
  filter:alpha(opacity=40);
  background-repeat: repeat;  
}
article {
	padding: 20px 0;
	display: grid;
	grid-template-columns: 2fr  [start]  1fr 1fr 1fr 1fr  [end] 2fr;
	
}

article * { grid-column: start / end; background:rgba(255,255,255,0.90);}


h2, p, figcaption { margin-bottom: 2.4rem; }

h1           { font: 700 2.5rem/1.2 "Roboto"; color: hsl(000, 000%, 30%); padding-bottom: 1rem;}
h2           { font: 400 1.5rem/1.2 "Roboto"; color: hsl(000, 000%, 57%); }
time         { font: 700 1.0rem/1.2 "Roboto"; color: hsl(250, 100%, 80%); }
h3           { font: 700 1.75rem/1.2 "Roboto"; color: hsl(221,  98%, 57%); }
h4           { font: 200 1.5rem/1.2 "Roboto"; color: hsl(000, 000%, 57%); }
p            { font: 400 1.25rem/2  "Roboto"; color: hsl(000, 000%, 30%);  margin: 20px; border: 20px; }
figcaption p { font: 400 1.0rem/1.5 "Roboto"; color: hsl(000, 000%, 47%); }
ul li { border: 20px; margin: 20px;list-style: none;}

.highlight {
  box-shadow: inset 0 -0.25em hsl(55, 100%, 75%);
}
.quote{
  width: 75%; font: 1.2rem Lato; color: hsl(000, 010%, 25%);text-align: justify; margin:0 auto;
}
.weblink{
  color: #0a89ff; border-bottom: 1px dashed #0a89ff;cursor: pointer;
}
.weblink:hover{
  color:#80c2ff;
}
/*a { box-shadow: inset 0 -0.25em hsl(55, 100%, 75%); }
*/


.size-1 { grid-column:  3/5;}
.size-2 { grid-column:  2 / 6; }
/*maybe I take this out*/
.size-3 { grid-column:  2 / 6; }
.size-4 { grid-column: 1 / 4; }

.size-1 img, .size-2 img, .size-3 img, .size-4 img { width: 100%; }
figure * { display: block; }

figcaption {
    margin-top: 0.5rem;
    display: flex;
	justify-content: center;    
}
.sidebar {
    height: 100%; 
    width: 0; 
    position: fixed; 
    z-index: 1; 
    top: 0;
    left: 0;
    background-color: #111; 
    overflow-x: hidden; 
    padding-top: 60px; 
    transition: 0.5s; 
  }
  
  .sidebar a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #818181;
    display: block;
	  transition: 0.3s;
	  box-shadow: none;
  }
  .sidebar a:hover {
    color: #f1f1f1;
  }
  
  .sidebar .closebtn {
    position: absolute;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
  }
  
  .openbtn {
    vertical-align: top;
    font-size: 20px;
    cursor: pointer;
    background-color: #111;
    color: white;
    padding: 0px 15px 10px 15px; /*top/right/bottom/left*/
    border: none;
  }
  .openbtn:hover {
    background-color: #444;
  }
  

@font-face{
  
  src: url("fonts/Roboto/Roboto-Regular.ttf");
  font-family: Roboto;
}
@font-face{
  font-family: "Roboto";
  src: url("fonts/Roboto/Roboto-Bold.ttf");
  font-weight: bold;
}
@font-face{
  src: url("fonts/Roboto/Roboto-Light.ttf");
  font-family: Roboto;
  font-weight: 200; 
}
@font-face{
  font-family: Lato;
  src: url("Lato/Lato-Regular.ttf");
}
@font-face{
  font-family: "Lato";
  src: url("Lato/Lato-Bold.ttf");
  font-weight: bold;
}
@media (max-width: 800px) {
  article { grid-template-columns: 1fr  [start] 6fr [end]  1fr; }
}
@media (max-width: 8.5in) { :root { font-size: 18px; } }
@media (max-width: 5.0in) { :root { font-size: 16px; } }
@media screen and (max-width: 600px) , (max-height: 750px){
    .sidebar {padding-top: 15px;}
    .sidebar a {font-size: 18px;}
    .openbtn[data-abbr]::before { 
        content: attr(data-abbr); 
    }
    
    .openbtn > span { display: none; }
}